name: Build & Deploy

on:
  push:
    branches:
      - master

env:
  JAVA_VERSION: '17'
  AWS_REGION: 'eu-central-1'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Build & test 'import-from-clockify' with Gradle
        working-directory: import-from-clockify
        run: ./gradlew test

      - name: Generate test report for 'import-from-clockify'
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report 'import-from-clockify'
          path: import-from-clockify/build/test-results/test/*.xml
          reporter: java-junit

      - name: Build & test 'generate-excel' with Gradle
        working-directory: generate-excel
        run: ./gradlew build

      - name: Generate test report for 'generate-excel'
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report 'generate-excel'
          path: generate-excel/build/test-results/test/*.xml
          reporter: java-junit

      - name: SAM print version
        run: sam --version

      - name: SAM build AWS stack
        run: sam build --template-file aws-sam/template.yml

      - name: SAM deploy AWS stack
        run: sam deploy --config-file aws-sam/samconfig.toml --parameter-overrides MonitoringRecipient=${{ secrets.MONITORING_RECIPIENT }} ContactName=${{ secrets.CONTACT_NAME }} ContactEmail=${{ secrets.CONTACT_EMAIL }}

      - name: Invoke AWS Lambda
        run: >
          aws lambda invoke --function-name timesheetwizard-import-from-clockify --cli-binary-format raw-in-base64-out 
          --payload '{"body": "{\"customerIds\": [\"1000\"], \"dateRangeType\": \"CUSTOM_YEAR\", \"dateRange\": \"2022\"}"}' response.json

