name: Build, deploy, release master branch

on:
  push:
    paths-ignore:
      - 'docs'
      - 'tampermonkey'
      - 'README.md'
      - 'docker-compose.yml'

env:
  JAVA_VERSION: '21'
  AWS_REGION: 'eu-central-1'
  AZURE_FUNCTIONAPP_NAME: 'timesheet-wizard-app'
  AZURE_RESOURCE_GROUP: 'timesheet-wizard'
  PACKAGE_DIRECTORY: './tw-app-azure/build/azure-functions/timesheet-wizard-app'
  TW_IMPORT_CLOCKIFY_API_KEY: ${{ secrets.TW_IMPORT_CLOCKIFY_API_KEY}}
  TW_IMPORT_CLOCKIFY_WORKSPACE_ID: ${{ secrets.TW_IMPORT_CLOCKIFY_WORKSPACE_ID}}
  SPRING_CLOUD_AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.SPRING_CLOUD_AZURE_STORAGE_CONNECTION_STRING}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Build & test with Gradle
        run: ./gradlew test

      - name: Generate test report (tw-core)
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report (tw-core)
          path: ./tw-core/build/test-results/test/*.xml
          reporter: java-junit

      - name: Generate test report (tw-app-aws)
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report (tw-app-aws)
          path: ./tw-app-aws/build/test-results/test/*.xml
          reporter: java-junit

  deploy-to-azure:
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Install Azure Core Tools
        run: |
          wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install azure-functions-core-tools-4

      - name: Build & package with Gradle
        run: ./gradlew tw-app-azure:build -x test tw-app-azure:azureFunctionsPackage

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Deploy Azure Function
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: '${{ env.AZURE_FUNCTIONAPP_NAME }}'
          package: '${{ env.PACKAGE_DIRECTORY }}'
          slot-name: 'Production'

      - name: Update Azure env variables
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az functionapp config appsettings set --name '${{ env.AZURE_FUNCTIONAPP_NAME }}' --resource-group '${{env.AZURE_RESOURCE_GROUP}}' --settings TIMESHEET_WIZARD_IMPORT_CLOCKIFY_API_KEY='${{secrets.TW_IMPORT_CLOCKIFY_API_KEY}}' TIMESHEET_WIZARD_IMPORT_CLOCKIFY_WORKSPACE_ID='${{secrets.TW_IMPORT_CLOCKIFY_WORKSPACE_ID}}' SPRING_CLOUD_AZURE_STORAGE_CONNECTION_STRING='${{secrets.SPRING_CLOUD_AZURE_STORAGE_CONNECTION_STRING}}'

  deploy-to-aws:
    if: false # temporarily disable AWS deployment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Print SAM version
        run: sam --version

      - name: Build AWS stack with SAM
        run: sam build --template-file tw-app-aws/aws-sam/template.yml

      - name: Deploy AWS stack with SAM
        run: sam deploy --config-file tw-app-aws/aws-sam/samconfig.toml --parameter-overrides MonitoringRecipient=${{ secrets.MONITORING_RECIPIENT }}

      - name: Invoke ImportFunction with SAM
        run: >
          sam remote invoke --stack-name tw TwFunction -e '{"customerIds": ["1000"], "dateRangeType": "CUSTOM_YEAR", "dateRange": "2022"}'

  release:
    runs-on: ubuntu-latest
    needs:
    - deploy-to-aws
    - deploy-to-azure
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Retrieve current version number
        run: ./gradlew printVersion

      - name: Update release version
        run: |
          ./gradlew releaseVersion

      - name: Push release tag
        run: |
          git push --all
          git push --tags

      - name: Retrieve updated version number
        run: ./gradlew printVersion

      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag=$(git describe --tags --abbrev=0)
          version=$(./gradlew -q printVersion)
          ./gradlew -q printChangeLog | gh release create $tag -t "$version" -F -