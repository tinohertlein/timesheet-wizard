Parameters:
  Architecture:
    Type: String
    Default: x86_64
    AllowedValues:
      - x86_64
      - arm64
  MonitoringRecipient:
    Type: String
  ContactName:
    Type: String
  ContactEmail:
    Type: String

AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS stack to import timesheet reports from Clockify and export them to various targets in various formats

Resources:
  ImportFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: timesheetwizard-importer
      Architectures:
        - !Ref Architecture
      CodeUri: ../importer
      Handler: not.used.in.provided.runtime
      Runtime: provided.al2
      Environment:
        Variables:
          MICRONAUT_ENVIRONMENTS: aws
      Description: An AWS Lambda function to import timesheets from Clockify
      MemorySize: 256
      PackageType: Zip
      Timeout: 60
      AutoPublishAlias: Live
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonS3FullAccess
      Tracing: Active
    Metadata:
      BuildMethod: makefile

  DocumentsGenerateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: timesheetwizard-documents-generator
      Architectures:
        - !Ref Architecture
      Handler: io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest
      Runtime: java17
      CodeUri: ../documents-generator/build/function.zip
      PackageType: Zip
      Environment:
        Variables:
         DISABLE_SIGNAL_HANDLERS: true
         QUARKUS_PROFILE: aws
         CONTACT_NAME: !Ref ContactName
         CONTACT_EMAIL: !Ref ContactEmail
      Description: An AWS Lambda function to generate exports-timesheets
      MemorySize: 512
      Timeout: 60
      AutoPublishAlias: Live
      SnapStart:
        ApplyOn: PublishedVersions
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonS3FullAccess
      Tracing: PassThrough
      Events:
        JSONFileUpload:
          Type: S3
          Properties:
            Bucket: !Ref TimesheetwizardDataBucket
            Events: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .json

  ImportLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - ImportFunction
    Properties:
      LogGroupName: !Join [ "", [ "/aws/lambda/", !Ref ImportFunction ] ]
      RetentionInDays: 30

  DocumentsGenerateLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - DocumentsGenerateFunction
    Properties:
      LogGroupName: !Join [ "", [ "/aws/lambda/", !Ref DocumentsGenerateFunction ] ]
      RetentionInDays: 30

  ImportDailyEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: timesheetwizard-importer-daily
      ScheduleExpression: cron(30 17 ? * MON,TUE,WED,THU,FRI *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt ImportFunction.Arn
          Id: timesheetwizard-importer-daily
          Input: '{"body": "{\"customerIds\": [], \"dateRangeType\": \"THIS_MONTH\"}"}'

  ImportMonthlyEvent:
    Type: AWS::Events::Rule
    Properties:
      Name: timesheetwizard-importer-monthly
      ScheduleExpression: cron(0 5 1 * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt ImportFunction.Arn
          Id: timesheetwizard-importer-monthly
          Input: '{"body": "{\"customerIds\": [], \"dateRangeType\": \"LAST_MONTH\"}"}'

  PermissionForImportDailyEvent:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ImportFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ImportDailyEvent.Arn

  PermissionForImportMonthlyEvent:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: ImportFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ImportMonthlyEvent.Arn

  TimesheetwizardDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: timesheetwizard-data
      AccessControl: Private
      VersioningConfiguration:
        Status: Suspended
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  TimesheetwizardErrorTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref MonitoringRecipient
          Protocol: email
      TopicName: timesheetwizard-error-topic

  UploadTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref MonitoringRecipient
          Protocol: email
      TopicName: timesheetwizard-upload-topic

  UploadEvent:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
              - !Ref TimesheetwizardDataBucket
      Name: timesheetwizard-upload-event
      State: ENABLED
      Targets:
        - Id: timesheetwizard-upload-topic
          Arn: !Ref UploadTopic

  ImportAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: importer-alarm
      ActionsEnabled: true
      OKActions: [ ]
      AlarmActions:
        - Ref: TimesheetwizardErrorTopic
      InsufficientDataActions: [ ]
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Maximum
      Dimensions:
        - Name: FunctionName
          Value: !Ref ImportFunction
      Period: 300
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing

  DocumentGenerateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: documents-generator-alarm
      ActionsEnabled: true
      OKActions: [ ]
      AlarmActions:
        - Ref: TimesheetwizardErrorTopic
      InsufficientDataActions: [ ]
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Maximum
      Dimensions:
        - Name: FunctionName
          Value: !Ref DocumentsGenerateFunction
      Period: 300
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: missing
